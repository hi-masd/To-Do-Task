{"mappings":"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","sources":["<anon>","src/index.js"],"sourcesContent":["var todoList = [];\nvar comdoList = [];\nvar remList = [];\nvar addButton = document.getElementById(\"add-button\");\nvar todoInput = document.getElementById(\"todo-input\");\nvar deleteAllButton = document.getElementById(\"delete-all\");\nvar allTodos = document.getElementById(\"all-todos\");\nvar deleteSButton = document.getElementById(\"delete-selected\");\n//event listners for add and delete\naddButton.addEventListener(\"click\", add);\ndeleteAllButton.addEventListener(\"click\", deleteAll);\ndeleteSButton.addEventListener(\"click\", deleteS);\n//event listeners for filtersk\ndocument.addEventListener(\"click\", (e)=>{\n    if (e.target.className.split(\" \")[0] == \"complete\" || e.target.className.split(\" \")[0] == \"ci\") completeTodo(e);\n    if (e.target.className.split(\" \")[0] == \"delete\" || e.target.className.split(\" \")[0] == \"di\") deleteTodo(e);\n    if (e.target.id == \"all\") viewAll();\n    if (e.target.id == \"rem\") viewRemaining();\n    if (e.target.id == \"com\") viewCompleted();\n});\n//event listner for enter key\ntodoInput.addEventListener(\"keypress\", (e)=>{\n    if (e.key === \"Enter\") add();\n});\n//updates the all the remaining, completed and main list\nfunction update() {\n    comdoList = todoList.filter((ele)=>{\n        return ele.complete;\n    });\n    remList = todoList.filter((ele)=>{\n        return !ele.complete;\n    });\n    document.getElementById(\"r-count\").innerText = todoList.length.toString();\n    document.getElementById(\"c-count\").innerText = comdoList.length.toString();\n}\n//adds the task in main list\nfunction add() {\n    var value = todoInput.value;\n    if (value === \"\") {\n        alert(\"\\uD83D\\uDE2E Task cannot be empty \\uD83D\\uDE2E\");\n        return;\n    }\n    todoList.push({\n        task: value,\n        id: Date.now().toString(),\n        complete: false\n    });\n    todoInput.value = \"\";\n    update();\n    addinmain(todoList);\n}\n//renders the main list and views on the main content\nfunction addinmain(todoList) {\n    allTodos.innerHTML = \"\";\n    todoList.forEach((element)=>{\n        var x = `<li id=${element.id} class=\"todo-item\">\n    <p id=\"task\"> ${element.complete ? `<strike>${element.task}</strike>` : element.task} </p>\n    <div class=\"todo-actions\">\n                <button class=\"complete btn btn-success\">\n                    <i class=\" ci bx bx-check bx-sm\"></i> Select\n\n                </button>\n\n                <button class=\"delete btn btn-error\" >\n                    <i class=\"di bx bx-trash bx-sm\"></i> Delete\n                </button>\n            </div>\n        </li>`;\n        allTodos.innerHTML += x;\n    });\n}\n//deletes and indiviual task and update all the list\nfunction deleteTodo(e) {\n    var deleted = e.target.parentElement.parentElement.getAttribute(\"id\");\n    todoList = todoList.filter((ele)=>{\n        return ele.id != deleted;\n    });\n    update();\n    addinmain(todoList);\n}\n//completes indiviaula task and updates all the list\nfunction completeTodo(e) {\n    var completed = e.target.parentElement.parentElement.getAttribute(\"id\");\n    todoList.forEach((obj)=>{\n        if (obj.id == completed) {\n            if (obj.complete == false) {\n                obj.complete = true;\n                e.target.parentElement.parentElement.querySelector(\"#task\").classList.add(\"line\");\n            } else {\n                obj.complete = false;\n                e.target.parentElement.parentElement.querySelector(\"#task\").classList.remove(\"line\");\n            }\n        }\n    });\n    update();\n    addinmain(todoList);\n}\n//deletes all the tasks\nfunction deleteAll(todo) {\n    todoList = [];\n    update();\n    addinmain(todoList);\n}\n//deletes only completed task\nfunction deleteS(todo) {\n    todoList = todoList.filter((ele)=>{\n        return !ele.complete;\n    });\n    update();\n    addinmain(todoList);\n}\n// functions for filters\nfunction viewCompleted() {\n    addinmain(comdoList);\n}\nfunction viewRemaining() {\n    addinmain(remList);\n}\nfunction viewAll() {\n    addinmain(todoList);\n}\n\n//# sourceMappingURL=index.efdf0a4a.js.map\n","var todoList = []\nvar comdoList = [];\nvar remList = [];\nvar addButton = document.getElementById(\"add-button\")\nvar todoInput = document.getElementById(\"todo-input\")\nvar deleteAllButton = document.getElementById(\"delete-all\")\nvar allTodos = document.getElementById(\"all-todos\");\nvar deleteSButton = document.getElementById(\"delete-selected\")\n\n\n//event listners for add and delete\naddButton.addEventListener(\"click\", add)\ndeleteAllButton.addEventListener(\"click\", deleteAll)\ndeleteSButton.addEventListener(\"click\", deleteS)\n\n\n//event listeners for filtersk\ndocument.addEventListener('click', (e) => {\n    if (e.target.className.split(' ')[0] == 'complete' || e.target.className.split(' ')[0] == 'ci') {\n        completeTodo(e);\n    }\n    if (e.target.className.split(' ')[0] == 'delete' || e.target.className.split(' ')[0] == 'di') {\n        deleteTodo(e)\n    }\n    if (e.target.id == \"all\") {\n        viewAll();\n    }\n    if (e.target.id == \"rem\") {\n        viewRemaining();\n    }\n    if (e.target.id == \"com\") {\n        viewCompleted();\n    }\n\n})\n//event listner for enter key\ntodoInput.addEventListener('keypress', (e) => {\n    if (e.key === 'Enter') {\n        add();\n    }\n});\n\n\n//updates the all the remaining, completed and main list\nfunction update() {\n    comdoList = todoList.filter((ele) => {\n        return ele.complete\n\n    })\n    remList = todoList.filter((ele) => {\n        return !ele.complete\n    })\n    document.getElementById(\"r-count\").innerText = todoList.length.toString();\n    document.getElementById(\"c-count\").innerText = comdoList.length.toString();\n\n}\n\n//adds the task in main list\n\nfunction add() {\n    var value = todoInput.value;\n    if (value === '') {\n        alert(\"ðŸ˜® Task cannot be empty ðŸ˜®\")\n        return;\n    }\n    todoList.push({\n        task: value,\n        id: Date.now().toString(),\n        complete: false,\n    });\n\n    todoInput.value = \"\";\n    update();\n    addinmain(todoList);\n}\n\n\n//renders the main list and views on the main content\n\nfunction addinmain(todoList) {\n    allTodos.innerHTML = \"\"\n    todoList.forEach(element => {\n        var x = `<li id=${element.id} class=\"todo-item\">\n    <p id=\"task\"> ${element.complete ? `<strike>${element.task}</strike>` : element.task} </p>\n    <div class=\"todo-actions\">\n                <button class=\"complete btn btn-success\">\n                    <i class=\" ci bx bx-check bx-sm\"></i> Select\n\n                </button>\n\n                <button class=\"delete btn btn-error\" >\n                    <i class=\"di bx bx-trash bx-sm\"></i> Delete\n                </button>\n            </div>\n        </li>`\n        allTodos.innerHTML += x\n    });\n}\n\n\n//deletes and indiviual task and update all the list\nfunction deleteTodo(e) {\n    var deleted = e.target.parentElement.parentElement.getAttribute('id');\n    todoList = todoList.filter((ele) => {\n        return ele.id != deleted\n    })\n\n    update();\n    addinmain(todoList);\n\n}\n\n//completes indiviaula task and updates all the list\nfunction completeTodo(e) {\n    var completed = e.target.parentElement.parentElement.getAttribute('id');\n    todoList.forEach((obj) => {\n        if (obj.id == completed) {\n            if (obj.complete == false) {\n                obj.complete = true\n                e.target.parentElement.parentElement.querySelector(\"#task\").classList.add(\"line\");\n            } else {\n                obj.complete = false\n\n                e.target.parentElement.parentElement.querySelector(\"#task\").classList.remove(\"line\");\n            }\n        }\n    })\n\n    update();\n    addinmain(todoList);\n}\n\n\n//deletes all the tasks\nfunction deleteAll(todo) {\n\n    todoList = []\n\n    update();\n    addinmain(todoList);\n\n}\n\n//deletes only completed task\nfunction deleteS(todo) {\n\n    todoList = todoList.filter((ele) => {\n        return !ele.complete;\n    })\n\n\n    update();\n    addinmain(todoList);\n\n}\n\n\n// functions for filters\nfunction viewCompleted() {\n    addinmain(comdoList);\n}\n\nfunction viewRemaining() {\n\n    addinmain(remList);\n}\nfunction viewAll() {\n    addinmain(todoList);\n}"],"names":["todoList","comdoList","remList","addButton","document","getElementById","todoInput","deleteAllButton","allTodos","deleteSButton","update","filter","ele","complete","innerText","length","toString","add","value","alert","push","task","id","Date","now","addinmain","innerHTML","forEach","element","x","addEventListener","todo","e","completed","deleted","target","className","split","parentElement","getAttribute","obj","querySelector","classList","remove","key"],"version":3,"file":"index.efdf0a4a.js.map"}